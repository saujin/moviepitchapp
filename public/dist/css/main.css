/*! normalize.css v3.0.3 | MIT License | github.com/necolas/normalize.css */@import url(https://fonts.googleapis.com/css?family=Roboto+Condensed:400,700);html{font-family:sans-serif;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}article,aside,details,figcaption,figure,footer,header,hgroup,main,menu,nav,section,summary{display:block}audio,canvas,progress,video{display:inline-block;vertical-align:baseline}audio:not([controls]){display:none;height:0}[hidden],template{display:none}a{background-color:transparent}a:active,a:hover{outline:0}abbr[title]{border-bottom:1px dotted}b,strong{font-weight:700}dfn{font-style:italic}h1{font-size:2em;margin:.67em 0}mark{background:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sup{top:-.5em}sub{bottom:-.25em}img{border:0}svg:not(:root){overflow:hidden}figure{margin:1em 40px}hr{box-sizing:content-box;height:0}pre{overflow:auto}code,kbd,pre,samp{font-family:monospace;font-size:1em}button,input,optgroup,select,textarea{color:inherit;font:inherit;margin:0}button{overflow:visible}button,select{text-transform:none}button,html input[type=button],input[type=reset],input[type=submit]{-webkit-appearance:button;cursor:pointer}button[disabled],html input[disabled]{cursor:default}button::-moz-focus-inner,input::-moz-focus-inner{border:0;padding:0}input{line-height:normal}input[type=checkbox],input[type=radio]{box-sizing:border-box;padding:0}input[type=number]::-webkit-inner-spin-button,input[type=number]::-webkit-outer-spin-button{height:auto}input[type=search]{-webkit-appearance:textfield;box-sizing:content-box}input[type=search]::-webkit-search-cancel-button,input[type=search]::-webkit-search-decoration{-webkit-appearance:none}fieldset{border:1px solid silver;margin:0 2px;padding:.35em .625em .75em}legend{border:0;padding:0}textarea{overflow:auto}optgroup{font-weight:700}table{border-collapse:collapse;border-spacing:0}td,th{padding:0}body{font-family:Roboto Condensed,sans-serif;font-weight:400}strong{font-weight:700}p{color:#726f7d}@media all and (min-width:769px){body{font-size:16px}h1,h2,h3{font-weight:700}}@media all and (max-width:768px){body{font-size:14px}}.btn-container{align-items:center;display:flex}.btn{border:none;border-radius:4px;outline:none}.btn--action{background-color:#ed4f4f;box-shadow:0 0 20px rgba(0,0,0,.2);color:#fff;display:inline-block;font-size:1rem;letter-spacing:2px;margin:1rem auto;padding:20px 50px;text-transform:uppercase;transition:all .35s}.btn--action:active,.btn--action:focus,.btn--action:hover{background:#c43333}.btn--inactive,.btn--inactive:active,.btn--inactive:focus,.btn--inactive:hover{background:#c0c0cb}.carousel-container{overflow:hidden;position:relative;width:100%}.carousel{position:relative;transition:all .5s;width:700%}.carousel-btn{background:#726f7d;box-shadow:0 0 20px rgba(0,0,0,.2);color:#fff;font-weight:700;letter-spacing:2px;padding:10px 15px;position:absolute;text-transform:uppercase;transition:all .35s;top:50px;z-index:2}.carousel-btn:after,.carousel-btn:before{background-image:url(../img/ico-arrow.svg);background-position:center center;background-repeat:no-repeat;color:#fff;display:inline-block;height:20px;position:relative;top:4px;width:25px}.carousel-btn:active,.carousel-btn:focus,.carousel-btn:hover{background-color:#52505a}.carousel-btn--next{right:-15px}.carousel-btn--next:after{content:"";margin-left:8px}.carousel-btn--prev{left:-15px}.carousel-btn--prev:before{background-image:url(../img/ico-arrow.svg);content:"";margin-right:8px;transform:scaleX(-1)}.carousel-one{transform:translateX(-14.28571%)}.carousel-item{display:flex;float:left;justify-content:center;width:14.28571%}.success-story{background:#fff;border-radius:20px;box-shadow:0 2px 50px rgba(0,0,0,.2);flex:1 1 300px;max-width:740px;margin:50px 0 100px;padding:70px 70px 30px;position:relative;width:90%}.success-story:after{background:#fff;border-bottom-left-radius:100%;bottom:-50px;box-shadow:0 20px 50px -3px rgba(0,0,0,.1);content:"";display:block;height:50px;position:absolute;right:10%;width:70px;z-index:1}.success-img{background-image:url(../img/avatar.png);border-radius:100%;height:132px;left:50%;margin-left:-66px;position:absolute;top:-50px;width:132px}.success-title{color:#232227;font-size:1.625rem;font-weight:700;line-height:2rem;text-align:center;text-transform:uppercase}.success-text{font-size:1.25rem;line-height:1.7}footer{background:#fff;border-top:1px solid #e5e5ee;color:#726f7d;font-size:1rem;line-height:2.375;padding:30px 0 15px;text-align:center;vertical-align:baseline}.heading--primary{color:#fff;font-size:3.125rem;line-height:1.32;width:100%}.heading--primary,.heading--section{text-align:center;text-transform:uppercase}.heading--section{color:#232227;font-size:2.5rem;margin-bottom:10px}.heading-meta{color:#232227;display:block;font-size:1rem;font-weight:700;margin-bottom:50px;letter-spacing:2px;text-align:center;text-transform:uppercase}[class*=icon]{background-repeat:no-repeat;background-position:center center;background-size:auto 100%;height:50px;margin-top:70px;width:50px}.icon-pen{background-image:url(../img/ico-pen.svg)}.icon-id{background-image:url(../img/ico-id.svg)}.icon-thumbs{background-image:url(../img/ico-thumbs.svg)}@media all and (min-width:769px){.header{display:flex;left:0;justify-content:space-between;padding:50px 20px 0;position:absolute;top:0;width:100%;z-index:3}.menu-toggle{display:none}.nav-logo{flex:0 0 auto;width:250px}.main-nav{align-items:center;display:flex;flex:1 1 auto;max-width:400px}.main-nav-link{color:#fff;flex:1 1 auto;font-size:.875rem;text-align:right;text-decoration:none;text-transform:uppercase}.main-nav-link:hover{text-decoration:underline}}@media all and (min-width:1100px){.header{left:50%;margin-left:-550px;width:1100px}}.section{display:flex;justify-content:center}.section-content{flex:1 1 auto;max-width:1100px;padding:20px}.section-vertical{align-items:center}.section--hero{background-image:url(../img/hollywood-bg.jpg);background-position:center center;background-size:cover;min-height:800px;position:relative}.section--hero:after{background-image:url(../img/cutout-red.svg);background-position:bottom right;background-repeat:no-repeat;background-size:cover;bottom:0;content:"";display:block;left:0;height:5vw;position:absolute;width:100vw}.section--hiw{background:#ed4f4f;padding:60px 0}.section--stories{background-image:linear-gradient(#ed4f4f,#ed4f4f 60%,#fff 0,#fff)}.section--team .btn--action{margin-top:100px}.team-member,.team-title{text-transform:uppercase}.team-photo{background-size:cover;border-radius:100%;box-shadow:0 0 50px rgba(0,0,0,.2);display:block;height:200px;margin:50px auto 0;overflow:hidden;width:200px}.team-photo.team-photo--bob{background-image:url(../img/bob.png)}.team-photo.team-photo--jonas{background-image:url(../img/jonas.png)}.team-member{color:#232227;font-size:1.625rem;line-height:1.23;margin-bottom:8px}.team-title{color:#c0c0cb;font-size:1rem;line-height:2;margin-bottom:30px}.team-text{font-size:1.25rem;line-height:1.7}.flex-container{display:flex;flex-wrap:wrap}.flex-item{color:#fff;display:flex;flex:1 0 33%;flex-direction:column;min-height:350px;padding:0 50px;text-align:center}.flex-item--first{padding-left:0}.flex-item--last{padding-right:0}.flex-item-icon{display:block;flex:0 0 auto;width:100%}.flex-item-header{flex:1 1 auto;font-size:1.5rem;margin-bottom:1rem;text-transform:uppercase}.flex-item-content{align-self:stretch;color:#fff;flex:2 2 auto;font-size:1.25rem}.flex-item-link{color:#8e0a0a;display:block;flex:0 0 auto;font-size:1rem;font-weight:700;text-align:center;text-decoration:underline;text-transform:uppercase;width:100%}*{box-sizing:border-box}body{font-size:16px;margin:0}
/*# sourceMappingURL=data:application/json;base64, */
